{
  "db_name": "PostgreSQL",
  "query": "\n            WITH mounts_cte AS (\n                SELECT\n                    tag_mounts.tag_id,\n                    ARRAY_AGG(mounts.mount_container_path) AS mount_container_path,\n                    ARRAY_AGG(mounts.mount_host_path) AS mount_host_path\n                FROM aesterisk.mounts\n                JOIN aesterisk.tag_mounts ON mounts.mount_id = tag_mounts.mount_id\n                GROUP BY tag_mounts.tag_id\n            ),\n            env_defs_cte AS (\n                SELECT\n                    tag_env_defs.tag_id,\n                    ARRAY_AGG(env_defs.env_def_key) AS env_def_key,\n                    ARRAY_AGG(env_defs.env_def_required) AS env_def_required,\n                    ARRAY_AGG(env_defs.env_def_type) AS env_def_type,\n                    ARRAY_AGG(env_defs.env_def_default_value) AS env_def_default_value,\n                    ARRAY_AGG(env_defs.env_def_regex) AS env_def_regex,\n                    ARRAY_AGG(env_defs.env_def_min) AS env_def_min,\n                    ARRAY_AGG(env_defs.env_def_max) AS env_def_max,\n                    ARRAY_AGG(env_defs.env_def_trim) AS env_def_trim\n                FROM aesterisk.env_defs\n                JOIN aesterisk.tag_env_defs ON env_defs.env_def_id = tag_env_defs.env_def_id\n                GROUP BY tag_env_defs.tag_id\n            ),\n            envs_cte AS (\n                SELECT\n                    server_envs.server_id,\n                    ARRAY_AGG(envs.env_key) AS env_key,\n                    ARRAY_AGG(envs.env_value) AS env_value\n                FROM aesterisk.envs\n                JOIN aesterisk.server_envs ON envs.env_id = server_envs.env_id\n                GROUP BY server_envs.server_id\n            ),\n            networks_cte AS (\n                SELECT\n                    server_networks.server_id,\n                    ARRAY_AGG(server_networks.network_id) AS network_id,\n                    ARRAY_AGG(server_networks.local_ip) AS network_local_ip\n                FROM aesterisk.server_networks\n                GROUP BY server_networks.server_id\n            ),\n            ports_cte AS (\n                SELECT\n                    server_ports.server_id,\n                    ARRAY_AGG(ports.port_port) AS port_port,\n                    ARRAY_AGG(ports.port_protocol) AS port_protocol,\n                    ARRAY_AGG(ports.port_mapped) AS port_mapped\n                FROM aesterisk.ports\n                JOIN aesterisk.server_ports ON ports.port_id = server_ports.port_id\n                GROUP BY server_ports.server_id\n            )\n            SELECT\n                servers.server_id,\n                tags.tag_image,\n                tags.tag_docker_tags,\n                tags.tag_healthcheck_test,\n                tags.tag_healthcheck_interval,\n                tags.tag_healthcheck_timeout,\n                tags.tag_healthcheck_retries,\n                mounts_cte.mount_container_path,\n                mounts_cte.mount_host_path,\n                env_defs_cte.env_def_key,\n                env_defs_cte.env_def_required,\n                env_defs_cte.env_def_type,\n                env_defs_cte.env_def_default_value AS \"env_def_default_value: _\",\n                env_defs_cte.env_def_regex AS \"env_def_regex: _\",\n                env_defs_cte.env_def_min AS \"env_def_min: _\",\n                env_defs_cte.env_def_max AS \"env_def_max: _\",\n                env_defs_cte.env_def_trim,\n                envs_cte.env_key,\n                envs_cte.env_value,\n                networks_cte.network_id,\n                networks_cte.network_local_ip,\n                ports_cte.port_port,\n                ports_cte.port_protocol,\n                ports_cte.port_mapped\n            FROM aesterisk.nodes\n            LEFT JOIN aesterisk.node_servers ON nodes.node_id = node_servers.node_id\n            LEFT JOIN aesterisk.servers ON node_servers.server_id = servers.server_id\n            LEFT JOIN aesterisk.tags ON servers.server_tag = tags.tag_id\n            LEFT JOIN mounts_cte ON servers.server_tag = mounts_cte.tag_id\n            LEFT JOIN env_defs_cte ON servers.server_tag = env_defs_cte.tag_id\n            LEFT JOIN envs_cte ON servers.server_id = envs_cte.server_id\n            LEFT JOIN networks_cte ON servers.server_id = networks_cte.server_id\n            LEFT JOIN ports_cte ON servers.server_id = ports_cte.server_id\n            WHERE nodes.node_uuid = $1;\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "server_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "tag_image",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "tag_docker_tags",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "tag_healthcheck_test",
        "type_info": "TextArray"
      },
      {
        "ordinal": 4,
        "name": "tag_healthcheck_interval",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "tag_healthcheck_timeout",
        "type_info": "Int4"
      },
      {
        "ordinal": 6,
        "name": "tag_healthcheck_retries",
        "type_info": "Int4"
      },
      {
        "ordinal": 7,
        "name": "mount_container_path",
        "type_info": "TextArray"
      },
      {
        "ordinal": 8,
        "name": "mount_host_path",
        "type_info": "TextArray"
      },
      {
        "ordinal": 9,
        "name": "env_def_key",
        "type_info": "TextArray"
      },
      {
        "ordinal": 10,
        "name": "env_def_required",
        "type_info": "BoolArray"
      },
      {
        "ordinal": 11,
        "name": "env_def_type",
        "type_info": "Int2Array"
      },
      {
        "ordinal": 12,
        "name": "env_def_default_value: _",
        "type_info": "TextArray"
      },
      {
        "ordinal": 13,
        "name": "env_def_regex: _",
        "type_info": "TextArray"
      },
      {
        "ordinal": 14,
        "name": "env_def_min: _",
        "type_info": "Int4Array"
      },
      {
        "ordinal": 15,
        "name": "env_def_max: _",
        "type_info": "Int4Array"
      },
      {
        "ordinal": 16,
        "name": "env_def_trim",
        "type_info": "BoolArray"
      },
      {
        "ordinal": 17,
        "name": "env_key",
        "type_info": "TextArray"
      },
      {
        "ordinal": 18,
        "name": "env_value",
        "type_info": "TextArray"
      },
      {
        "ordinal": 19,
        "name": "network_id",
        "type_info": "Int4Array"
      },
      {
        "ordinal": 20,
        "name": "network_local_ip",
        "type_info": "Int2Array"
      },
      {
        "ordinal": 21,
        "name": "port_port",
        "type_info": "Int4Array"
      },
      {
        "ordinal": 22,
        "name": "port_protocol",
        "type_info": "Int2Array"
      },
      {
        "ordinal": 23,
        "name": "port_mapped",
        "type_info": "Int4Array"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "7b0291851ed8c5276071d1ede66ca54d13b06c08960cb607658f482a0ada2a93"
}
